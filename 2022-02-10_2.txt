#include "SR04.h"           //für Infrarot-Sensor
#include <Servo.h>          //für Servo = Schranke
#include <LiquidCrystal.h>  //für LCD

//IR-Sensor
int trig_pin = 4; //IR-Trig
int echo_pin = 3; //IR-Echo
SR04 sensor = SR04(echo_pin,trig_pin); 
long distance; //Distanz von IR-Sensor gemessen

//Schranke
Servo myServo;
int servoDelay =2000; //2s
int servoMax=90; //Schranke öffnet sich zu 90°
int servoMin=0;

//LCD
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(7, 8, 9, 10, 11, 12);

//Variabeln
int capacity;

void setup() {

  //IR-Sensor Ausgabe im seriellen Monitor
  Serial.begin(9600);
  delay(1000);

  //Schranke
  myServo.attach(5); //Servo an Pin5

  //LCD
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("Freie Plaetze:");
  capacity = 5;
}

void loop() {
  //Distanz messen und im seriellen Monitor ausgeben
  distance=sensor.Distance();
  Serial.println(distance);
  delay(1000);
  
  //LCD
  lcd.setCursor(0, 1);
  lcd.print(capacity);

  if (distance<5){ //steht ein Auto da?
    if (capacity>0){  //wenn noch Platz frei ist
      while (distance<5){ //während das Auto noch vor der Schranke steht
        myServo.write(servoMax); //Schranke öffnen bzw. offen lassen
        delay(servoDelay);  //warten bis Auto eingefahren ist
        distance=sensor.Distance();
        Serial.println(distance); 
        }
      capacity = capacity - 1;  //Counter runterzählen
    } 
  }

  //Schranke schließen
  myServo.write(servoMin);
  //LCD-Ausgabe
  lcd.setCursor(0, 1);
  lcd.print(capacity);
}